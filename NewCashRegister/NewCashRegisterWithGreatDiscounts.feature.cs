// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34209
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NewCashRegister
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("FruitShop with localization and great discounts")]
    public partial class FruitShopWithLocalizationAndGreatDiscountsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "NewCashRegisterWithGreatDiscounts.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FruitShop with localization and great discounts", "\r\nAs a manager in a store called \"FruitShop\", \r\nI want to increase profits with a" +
                    " new cash register", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product name",
                        "Price in cents"});
            table1.AddRow(new string[] {
                        "Pommes",
                        "100"});
            table1.AddRow(new string[] {
                        "Bananes",
                        "150"});
            table1.AddRow(new string[] {
                        "Cerises",
                        "75"});
#line 8
 testRunner.Given("the store sells these products:", ((string)(null)), table1, "Given ");
#line 13
 testRunner.And("the localization of \"Pommes\" in \"Apples\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("the localization of \"Pommes\" in \"Mele\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create great discounts")]
        public virtual void CreateGreatDiscounts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create great discounts", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product name",
                        "Quantity",
                        "Rebate in cents"});
            table2.AddRow(new string[] {
                        "Fruits",
                        "5",
                        "200"});
            table2.AddRow(new string[] {
                        "* Pommes",
                        "4",
                        "100"});
            table2.AddRow(new string[] {
                        "Cerises",
                        "2",
                        "20"});
#line 21
 testRunner.Given("these rebates in cents:", ((string)(null)), table2, "Given ");
#line 26
 testRunner.And("a discount on 2 \"Bananes\" for the price of 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("a rebate of 200 cents for 3 \"Apples\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("a rebate of 100 cents for 2 \"Mele\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product name",
                        "Quantity"});
            table3.AddRow(new string[] {
                        "Mele",
                        "4"});
            table3.AddRow(new string[] {
                        "Apples",
                        "4"});
            table3.AddRow(new string[] {
                        "Bananes",
                        "1"});
            table3.AddRow(new string[] {
                        "Pommes",
                        "1"});
#line 29
 testRunner.When("the customer buys these products:", ((string)(null)), table3, "When ");
#line 35
 testRunner.Then("the total price should be 150 cents", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
